
Alphabet
	Symbols allowed on the Turing Tape
	_ is the blank symbol, which, when considering a restricted tape can be replaced with a default symbol
	Set 1: Unary: {1,_}
	Set 2: Binary: {0,1,_}
	Set 3: DNA: {A,C,G,T,_}
	Set 4: DNA restricted: {A,C,G,T} (default is A)
		Alphabet set cardinality: asz = |{A,C,G,T}| = 4
	
Turing tape
	Restricted Turing Tape size: tsz
	# qubits for Turing Tape:q_{tt} = tsz * log2(asz)

Read/Write Head
	tsz qubits for one-hot encoding of Head position
	asz qubits to copy the contents from current Head position
	
Halt indicator
	1 qubit to measure status of Halt at the end of n-iteration
	Can be encoded as a special Machine State
	
Error indicator
	1 qubit to measure tape under/overflow
	
Finite State Machine
	Encodes a Unitary Matrix that transforms a [ip,curr state] --> [op, next state, move l/r]
	Number of states: fsm

Machine State
	log2(fsm) or fsm to hold current state in Binary coded or one-hot coded format
	
	# qubits: q_{fsm} 
		denotes # states
	
1-iteration:
	[{R Head}] = Toffoli [{Head Position}, {Turing Tape}]
	[{W Head}, {Machine State}, {Move}, {Halt}] = U_fsm [{R Head}, {Machine State}, {FSM}]
	[{Head Position}, {Error}] = U_move [{Head Position}, {Move}]
	[{Turing Tape}] = = U_write [{Head Position}, {W Head}]

Algorithm KC:
	1. Initialize 
		Tape to all A
		R/W Head to position 0
		Halt to 0
		Error to 0
		Machine State to state 0
		FSM to equal superposition of all FSMs
	2. Run machine for n-iterations
	3. Amplify target sequence using Grover's Gate (QiBAM)
	4. Create histogram of modal FSMs
	5. Choose shortest FSM that doesn't halt or throws error as Kolmogorov Complexity of target DNA sequence
	
Algorithm AP:
	1. Initialize 
		Tape to all A
		R/W Head to position 0
		Halt to 0
		Error to 0
		Machine State to state 0
		FSM to equal superposition of all FSMs
	2. Run machine for n-iterations
	3. Measure Tape and FSM
	4. Group FSM probabilities by Tape sequence
	5. Infer Algorithmic Probability of each/target sequence	